<!doctype html>
<!--
  Copyright 2016 Google Inc. All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1, width=device-width, user-scalable=yes" />
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      border: 0;
      padding: 0;
      min-height: 100vh;
      font-family: sans-serif;
      font-size: 21px;
      letter-spacing: -2.3px;
      font-weight: 300;
      background-color: hsla(0, 0%, 96%, 1);
    }
    html {
      background-color: hsla(0, 0%, 25%, 1);
    }
    a, a:link, a:visited, a:hover, a:active {
      color: inherit;
    }
    body {
      padding: 1.5em 1.5em 0 1.5em;
    }
    body.font-loaded {
      font-family: 'Yanone Kaffeesatz';
      font-weight: 200;
      /* Ratio of this font to sans-serif
       * Determined using https://meowni.ca/font-style-matcher/
       */
      font-size: calc(20 / 21 * 1rem);
      letter-spacing: 0;
    }
    h1, h2 {
      text-align: center;
      text-shadow: 0px 0px 2px hsla(0, 0%, 40%, 0.4);
      margin: 0.5em 0;
      line-height: 1.5em;

      letter-spacing: -3.05px;
      font-weight: 600;
    }
    body.font-loaded h1,
    body.font-loaded h2 {
      font-weight: 400;
      letter-spacing: 0;
    }
    h1 {
      font-size: 4rem;
    }
    h2 {
      font-size: 1.4rem;
    }
    @media (max-width: 400px) {
      h1 {
        font-size: 3rem;
      }
      h2 {
        font-size: 1.05rem;
      }
    }
    .subtitle {
      margin-top: -2rem;
    }
    p.intro {
      max-width: 720px;
      margin: 1rem auto;
      line-height: 1.4em;
    }
    p.intro:last-of-type {
      margin-bottom: 0;
    }
    dl, dt, dd {
      line-height: 1.4em;
    }
    dl {
      max-width: 720px;
      margin: 1rem auto;
    }
    dt {
      font-weight: 400;
    }
    dd {
      margin-bottom: 0.5em;
    }
    hr {
      border: 0;
      border-top: 1px solid hsla(0, 0%, 0%, 0.3);
      box-shadow: 0 0 4px hsla(0, 0%, 0%, 0.2);
      margin: 2rem 0 2rem -0.75rem;
      width: calc(100% + 1.5rem);
    }

    .separatorblock {
      width: 100vw;
      min-height: 10vh;
      margin: 2rem 0 2rem -1.5rem;
      background-color: hsla(0, 0%, 25%, 1);
      color: white;
      padding: 2rem;
      box-shadow: 0 0 4px hsla(0, 0%, 25%, 1);;
    }
    nav {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
    }
    nav a {
      display: block;
      margin: 0.5rem;
      text-decoration: none;
    }
    #listing {
      width: 100%;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-around;
    }
    .underdashfunction {
      max-width: 100%;
      width: 100%;
      flex-basis: 100%;
      display: flex;
      flex-wrap: wrap;
      flex-shrink: 1;
      align-content: flex-start;
      margin-bottom: 2rem;
    }
    .underdashfunction:before {
      display: block;
      flex-shrink: 0;
      content: attr(data-function-name);
      text-align: left;
      font-size: 1.2rem;
      background-color: hsla(0, 0%, 0%, 0.1);
      margin: 0rem 0 1rem -1.5rem;
      padding: 1rem 1.5rem;
      flex-basis: calc(100% + 1rem);
    }
    .underdashfunction:last-of-type {
      margin-bottom: 0;
    }
    @media (min-width: 1000px) {
      .underdashfunction {
        flex-basis: calc(50% - 4rem);
        width: calc(50% - 4rem);
        max-width: calc(50% - 4rem);
      }
      .underdashfunction:before {
        margin-left: 0;
        flex-basis: 100%;
        flex-shrink: 1;
      }
    }
    .codeblock {
      position: relative;
      border: 1px solid black;
      background-color: hsla(0, 0%, 100%, 0.54);
      padding: 0.5rem 1rem;
      margin: 0;
      display: none;
      flex-basis: 100%;
      flex-shrink: 1;
      overflow: auto;
      align-self: stretch;
      line-height: 1.4em;
    }
    @media (max-width: 470px) {
      .codeblock {
        padding-top: 2rem;
      }
    }
    .codeblock .copy {
      position: absolute;
      top: 0;
      right: 0;
      border: 0;
      background-color: hsla(0, 0%, 0%, 0.74);
      color: white;
      font-family: inherit;
      font-size: 0.8em;
      padding: 0.5em;
    }
    input.codeselector {
      display: none;
    }
    label.codeselector {
      padding: 0.5rem 1rem;
      background-color: hsla(0, 0%, 100%, 0.54);
      border: 1px solid black;
      border-right: 0;
      border-bottom: 0;
    }
    label.codeselector:last-of-type {
      border-right: 1px solid black;
    }
    input.codeselector.fcode:checked ~ label.codeselector.fcode,
    input.codeselector.flazycode:checked ~ label.codeselector.flazycode,
    input.codeselector.fasynccode:checked ~ label.codeselector.fasynccode {
      background-color: hsla(50, 100%, 80%, 0.54);
    }
    input.codeselector.fcode:checked ~ .codeblock.fcode,
    input.codeselector.flazycode:checked ~ .codeblock.flazycode,
    input.codeselector.fasynccode:checked ~ .codeblock.fasynccode {
      display: block;
    }
    pre.codeblock {
      font-family: monospace !important;
      font-size: 1rem !important;
      letter-spacing: -1.2px !important;
    }
    .font-loaded pre.codeblock {
      /* Ratio of 'Source Code Pro' (weight: 200) to sans-serif
       * Determined using https://meowni.ca/font-style-matcher/
       */
      font-family: 'Source Code Pro' !important;
      font-size: calc(64rem / 70 * 0.8) !important;
      letter-spacing: 0 !important;
      font-weight: 200 !important;
    }
    a.btt {
      display: block;
      flex-basis: 100%;
      text-align: right;
      font-size: 0.7rem;
      margin-top: 1rem;
      text-decoration: none;
    }
    .copyright {
      margin: 6rem 0 0 0;
      text-align: center;
    }
    footer {
      margin-bottom: 0 !important;
    }
  </style>
  <title>Underdash</title>
</head>
<body>
  <h1 class="title">Underdash</h1>
  <h2 class="subtitle">Just copy/paste what‚Äôcha need</h2>

  <nav id="toc" class="separatorblock">
    {{#each functions}}
    <a href="#{{name}}">{{name}}</a>
    {{/each}}
  </nav>
  <div id="listing">
    {{#each functions}}
      <section class="underdashfunction" data-function-name="{{name}}" id="{{name}}">
        <input type="radio" name="{{name}}_radio" id="{{name}}_radio_fcode" class="codeselector fcode" checked>
        <input type="radio" name="{{name}}_radio" id="{{name}}_radio_flazy" class="codeselector flazycode">
        <input type="radio" name="{{name}}_radio" id="{{name}}_radio_fasync" class="codeselector fasynccode">
        <label class="codeselector fcode" for="{{name}}_radio_fcode" tabindex="0">Arrays</label>
        {{#if fLazyCode}}
        <label class="codeselector flazycode" for="{{name}}_radio_flazy" tabindex="0">Sync Iter</label>
        {{/if}}
        {{#if fAsyncCode}}
        <label class="codeselector fasynccode" for="{{name}}_radio_fasync" tabindex="0">Async Iter</label>
        {{/if}}
        <pre class="codeblock fcode"><button class="copy">Copy to clipboard</button>{{{fCode}}}</pre>
        <pre class="codeblock flazycode"><button class="copy">Copy to clipboard</button>{{{fLazyCode}}}</pre>
        <pre class="codeblock fasynccode"><button class="copy">Copy to clipboard</button>{{{fAsyncCode}}}</pre>
        <a href="#toc" class="btt">Back to top</a>
      </section>
    {{/each}}
  </div>
  <footer class="separatorblock">
    <p class="intro">
      Underdash is a collection of snippets for array and iterator manipulation. It‚Äôs <em>not</em> meant to be a library and is therefore not provided as a bundled .js file. The individual implementations are supposed to be short and concise enough that the code can be immediately understood and be copy-pasted. If a function doesn‚Äôt <em>quite</em> do what you want, you should feel comfortable adjusting and augmenting the snippet.
    </p>
    <p class="intro">
      Each function is provided in up to 3 flavors: 
      <dl>
        <dt>The Array versions</dt>
        <dd>Work on arrays and should yield behavior similar to the functions provided by <a href="https://lodash.com" target="_blank" rel="noopener">LoDash</a> or <a href="http://underscorejs.org/" target="_blank" rel="noopener">UnderscoreJS</a>.</dd>
        <dt>The Synchronous Iterator versions</dt>
        <dd>Are implemented using generators and work with any (non-asynchronous) iterable. They are effectively lazy implementations.</dd>
        <dt>The Asynchronous Iterator versions</dt>
        <dd>Are implemented using asynchronous generators and work with any iterable. They are effectively lazy implementations.</dd>
      </dl>
    </p>
    <div class="copyright">
      Built with ü¶Å by <a href="https://twitter.com/DasSurma" target="_blank" rel="noopener">Surma</a>, Apache-2.0 license. Code on <a href="https://github.com/surma/underdash" target="_blank" rel="noopener">GitHub</a>.
    </div>
  </footer>
  <script>
    (function () {
      [
        'https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:200,400|Source+Code+Pro:200',
        'prism.css'
      ]
      .forEach(href => {
        const link = document.createElement('link');
        link.href = href;
        link.rel = "stylesheet";
        link.onload = _ => document.body.classList.add('font-loaded');
        document.head.appendChild(link);
      });

      Array.from(document.querySelectorAll('label')).forEach(label => {
        label.onkeypress = evt => {
          if (evt.code === 'Space' || evt.code === 'Enter') {
            evt.preventDefault();
            evt.target.click();
          }
        }
      })

      Array.from(document.querySelectorAll('button.copy')).forEach(btn => {
        btn.onclick = evt => {
          const btn = event.target;
          const ctr = event.target.parentNode;
          const ta = document.createElement('textarea');
          ctr.removeChild(btn);
          ta.value = ctr.textContent;
          document.body.appendChild(ta);
          ta.select();
          try {
            document.execCommand('copy');
          } catch(e) {}
          document.body.removeChild(ta);
          ctr.prepend(btn);
          requestAnimationFrame(_ => btn.focus());
        };
      });
    })();
  </script>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-88614738-1', 'auto');
    ga('send', 'pageview');
  </script>
</body>
